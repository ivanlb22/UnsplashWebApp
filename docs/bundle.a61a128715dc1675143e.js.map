{"version":3,"sources":["webpack://api-unplash/./src/js/http-provider.js","webpack://api-unplash/./src/js/imagenes-page.js","webpack://api-unplash/./src/index.js","webpack://api-unplash/./src/js/daynight-control.js"],"names":["document","getElementById","mensajeResultados","crearVectorImagenes","async","resultados","innerHTML","palabraBuscar","value","resp","fetch","valorQuery","APIkey","ok","results","json","length","classList","remove","add","console","log","error","cargarImagenesAPI","imagenesNodo","forEach","resultado","key","urls","small","createElement","style","backgroundImage","addEventListener","window","open","links","download","imagenes","appendChild","lupa","hora","Date","getHours","body","backgroundColor","color","input","evento"],"mappings":"mBAAA,MAIM,EAAQA,SAASC,eAAgB,SACjC,EAAWD,SAASC,eAAgB,YACpCC,EAAoBF,SAASC,eAAgB,iBCDtCE,EAAsBC,UAC/B,MAAMC,ODGuBD,WAC7B,EAASE,UAAY,GACrB,IACI,MAAMC,EAAgB,EAAMC,MACtBC,QAAaC,OAbLC,EAayBJ,EAbbK,EACR,8CADoB,gDAAiDD,2BAAsCC,MAc7H,IAAKH,EAAKI,GACN,KAAM,uDAEV,MAAQC,QAAST,SAAqBI,EAAKM,OAS3C,OAP0B,IAAtBV,EAAWW,OACXd,EAAkBe,UAAUC,OAAQ,UAExChB,EAAkBe,UAAUE,IAAK,UAEjC,EAAMX,MAAQ,GACdY,QAAQC,IAAKhB,GACNA,EACT,MAAQiB,GACNF,QAAQC,IAAKC,GA5BD,IAAEX,EAAYC,GCMLW,GACnBC,EAAe,GACrBnB,EAAWoB,SAAS,CAACC,EAAWC,KAC5BP,QAAQC,IAAKK,EAAUE,KAAKC,OAC5BT,QAAQC,IAAKM,GACbH,EAAcG,GAAQ3B,SAAS8B,cAAe,OAC9CN,EAAcG,GAAMV,UAAUE,IAAK,OACnCK,EAAcG,GAAMI,MAAMC,gBAAkB,QAASN,EAAUE,KAAKC,UACpEL,EAAcG,GAAMM,iBAAkB,YAAY,KAC9CC,OAAOC,KAAMT,EAAUU,MAAMC,SAAU,aAE3CC,SAASC,YAAaf,EAAcG,QCRtCa,EAAOxC,SAASC,eAAgB,QAatCiC,OAAOD,iBAAkB,QCtBG,KAExB,MAEMQ,GAFQ,IAAIC,MAECC,WAEfF,EAAO,GAAKA,EAAO,IAEnBzC,SAAS4C,KAAKb,MAAMc,gBAAkB,OACtC7C,SAAS4C,KAAKb,MAAMe,MAAQ,YAE5B9C,SAAS4C,KAAKb,MAAMc,gBAAkB,UACtC7C,SAAS4C,KAAKb,MAAMe,MAAQ,WDcpCC,MAAMd,iBAAkB,SAAYe,IACb,UAAfA,EAAOrB,KACPxB,OAGRqC,EAAKP,iBAAkB,SAAS,KAC5B9B,Q","file":"bundle.a61a128715dc1675143e.js","sourcesContent":["const APIUnsplash = ( valorQuery, APIkey ) => `https://api.unsplash.com/search/photos?query=${ valorQuery }&per_page=30&client_id=${ APIkey}`;\r\nconst accessKeyUnsplash = '_C9eeWZc_ludhgtzE71TI1rrvYk-KwIiLVo4jJ0nczU'\r\n\r\n\r\nconst input = document.getElementById( 'input' );\r\nconst imagenes = document.getElementById( 'imagenes' );\r\nconst mensajeResultados = document.getElementById( 'no-resultados' );\r\n\r\n//Función encargada de realizar la conexión a la api \r\nexport const cargarImagenesAPI = async() => {\r\n    imagenes.innerHTML = '';\r\n    try {\r\n        const palabraBuscar = input.value;\r\n        const resp = await fetch( APIUnsplash( palabraBuscar, accessKeyUnsplash ) );\r\n        if( !resp.ok ){\r\n            throw 'No se ha podido realizar la conexión con el servidor'\r\n        }\r\n        const { results: resultados } = await resp.json();\r\n        //Si no hay resultados muestro un promp\r\n        if( resultados.length === 0 ) {\r\n            mensajeResultados.classList.remove( 'hidden' ) \r\n    } else {\r\n        mensajeResultados.classList.add( 'hidden' );\r\n    }\r\n        input.value = '';\r\n        console.log( resultados )\r\n        return resultados;\r\n    } catch ( error ) {\r\n        console.log( error );\r\n    }\r\n}","import { cargarImagenesAPI } from  './http-provider'\r\n\r\n\r\n//Tengo que llamar a la función que dibuja el html\r\n\r\nexport const crearVectorImagenes = async () => {\r\n    const resultados = await cargarImagenesAPI();\r\n    const imagenesNodo = [];\r\n    resultados.forEach( (resultado, key ) => {\r\n        console.log( resultado.urls.small );\r\n        console.log( key );\r\n        imagenesNodo[ key ] = document.createElement( 'div');\r\n        imagenesNodo[ key ].classList.add( 'img');\r\n        imagenesNodo[ key ].style.backgroundImage = `url( ${ resultado.urls.small } )`;\r\n        imagenesNodo[ key ].addEventListener( 'dblclick', () => {\r\n            window.open( resultado.links.download, '_blank' )\r\n        })\r\n        imagenes.appendChild( imagenesNodo[ key ] );\r\n    });\r\n}","//Importamos el css\r\nimport './css/style.css';\r\n\r\n//Importamos las funciones que necesita para que funcione la aplicación\r\nimport { crearVectorImagenes } from  './js/imagenes-page'\r\nimport { diaNocheModo } from  './js/daynight-control'\r\n\r\n\r\n//Elementos DOM\r\nconst lupa = document.getElementById( 'lupa' );\r\n\r\n\r\n\r\n\r\n//LLamadas a las funciones \r\n\r\n//Función que controla el color de fondo y de la letra en función de si es de día o de noche\r\n\r\n\r\n\r\n//Eventos\r\n\r\nwindow.addEventListener( 'load', diaNocheModo );\r\n\r\n//Evento que al pulsar enter en el input inicia la petición a la api\r\n\r\ninput.addEventListener( 'keyup' , ( evento ) => {\r\n    if( evento.key === 'Enter') {\r\n        crearVectorImagenes();\r\n    }\r\n})\r\nlupa.addEventListener( 'click', () => {\r\n    crearVectorImagenes();\r\n})\r\n\r\n","export const diaNocheModo = () => {\r\n    //Primero, llamamos al objeto date\r\n    const fecha = new Date();\r\n    //Segundo, extraemos la hora de la fecha\r\n    const hora = fecha.getHours();\r\n    //Tercero, hacemos las condiciones, el método getHours, devuelve la hora en formato 0 a 23\r\n    if( hora > 8 && hora < 20){\r\n        //Accedemos al body desde el documento y cambiamos background-color y el color\r\n        document.body.style.backgroundColor = \"#fff\";\r\n        document.body.style.color = '#121212'\r\n    } else {\r\n        document.body.style.backgroundColor = '#121212'\r\n        document.body.style.color = '#fff';\r\n    }\r\n}"],"sourceRoot":""}